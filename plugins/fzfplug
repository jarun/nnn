#!/usr/bin/env sh

# Description: Fuzzy find and execute nnn plugins (and, optionally, custom scripts located elsewhere). 
# Description and details of plugins can be previewed from the fzf interface. Use `?` to toggle preview pane on and off.
#
# For better compatibility with as many nnn plugins as possible, fzfplug will first execute
# the chosen script on the file hovered in nnn, and upon failure, try to run it with no target
# (which should actually run it on selected files if nnn has an active selection). I do not 
# have the required dependencies to confirm compatibility with all scripts though.
#
# Dependencies: find, fzf, cat (for better compatibility, but can easily be replaced by bat at line 26:105 if preferred)
# Shell: POSIX compliant
# Author: Kabouik

# nnn PLUGINS SOURCE
nnnplugins="$HOME/.config/nnn/plugins"

# OPTIONAL SCRIPTS SOURCE
# Leave blank or fill with the absolute path to another folder containing executable scripts
# For instance, "$HOME/.local/share/nautilus/scripts", as you can find plenty of Git repos with Nautilus scripts
# Feel free to add new variables for additional script folders if need be, but remember to increment `find` at 26:44.
otherplugins=""

# OTHER VARIABLES
err=0
n="\n---\n"
plugin=$(find "$nnnplugins" "$otherplugins" -maxdepth 3 -perm -111 -type f 2>/dev/null | fzf --preview 'cat {}' --preview-window right:66% --delimiter / --with-nth -1 --bind="?:toggle-preview")

# TRY RUNNING THE SCRIPT ON HOVERED FILE FIRST, AND ABORT IF NO PLUGIN WAS SELECTED IN FZFPLUG (ESC OR ^C), 
if ! [ "$plugin" = "" ]; then
    "$plugin" "$1" || err=1
fi

# IF THAT FAILS WITH HOVERED FILE, TRY WITH NO TARGET (nnn SELECTIONS SHOULD STILL BE PASSED TO THE SCRIPT IN THAT CASE)
if [ "$err" -eq "1" ]; then
    clear && "$plugin" || err=2
fi

# IF THAT FAILS TOO, ABORT AND SHOW AN ERROR
if [ "$err" -eq "2" ]; then
    printf "$n""Failed to execute '%s'. See error above or try without fzfplug. Press return to continue. " "$plugin" && read -r _ && clear
fi
